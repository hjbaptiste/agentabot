{
    "name": "javaQuestions",
    "desc": "Java assessment which provides Multiple Choice Questions (MCQs) related to Core Java.",
    "questions": [
        {
            "description": "What is correct syntax for main method of a java class?",
            "answers": {"A": "public static int main(String[] args)", "B": "public int main(String[] args)",
                        "C": "public static void main(String[] args)", "D": "None of the above."},
            "answer": "C",
            "explaination": "Correct syntax is public static void main(String[] args).",
            "areaOfFocus": "Syntax"
        },
        {
            "description": "What is the size of double variable?",
            "answers": {"A": "8 bit", "B": "16 bit",
                        "C": "32 bit", "D": "64 bit"},
            "answer": "D",
            "explaination": "The double data type is represented by double-precision 64-bit IEEE 754 floating point.",
            "areaOfFocus": "Number Types"
        },
        {
            "description": "What is the default value of double variable?",
            "answers": {"A": "0.0d", "B": "0.0f",
                        "C": "0", "D": "Not defined"},
            "answer": "A",
            "explaination": "double variable has default value of 0.0d if defined as an instance/static variable.",
            "areaOfFocus": "Number Types"
        },
        {
            "description": "Which of the following is true about protected access modifier",
            "answers": {"A": "Variables, methods and constructors which are declared protected can be accessed by any class.", 
                        "B": "Variables, methods and constructors which are declared protected can be accessed by any class lying in same package.",
                        "C": "Variables, methods and constructors which are declared protected in the superclass can be accessed only by its child class.",
                        "D": "None of the above."},
            "answer": "C",
            "explaination": "Protected access modifier is used to restrict access to variables, methods and constructors to subclass only. Subclass can lie in different package.",
            "areaOfFocus": "Access Modifier"
        },
        {
            "description": "A class always has a default constructor.",
            "answers": {"A": "True", "B": "False"},
            "answer": "B",
            "explaination": "It is not mandatory to have a default constructor in a class.",
            "areaOfFocus": "Class creation"
        },
        {
            "description": "Can a constructor be made final?",
            "answers": {"A": "True", "B": "False"},
            "answer": "B",
            "explaination": "No, this is not possible.",
            "areaOfFocus": "Class creation"
        },
        {
            "description": "What is NullPointerException?",
            "answers": {"A": "A NullPointerException is thrown when calling the instance method of a null object or modifying/accessing field of a null object.",
                        "B": "A NullPointerException is thrown when object is set as null.",
                        "C": "A NullPointerException is thrown when object property is set as null.",
                        "D": "None of the above."},
            "answer": "A",
            "explaination": "A NullPointerException is thrown when calling the instance method of a null object or modifying/accessing field of a null object.",
            "areaOfFocus": "Exception Handling"
        },
        {
            "description": "What is Serialization?",
            "answers": {"A": "Serialization is the process of writing the state of an object to another object.",
                        "B": "Serialization is the process of writing the state of an object to a byte stream.",
                        "C": "Both of the above.", "D": "None of the above."},
            "answer": "B",
            "explaination": "Serialization is the process of writing the state of an object to a byte stream.",
            "areaOfFocus": "Serialization"
        },
        {
            "description": "Is it necessary that each try block must be followed by a catch block?",
            "answers": {"A": "True", "B": "False"},
            "answer": "B",
            "explaination": "It is not necessary that each try block must be followed by a catch block. It should be followed by either a catch block or a finally block.",
            "areaOfFocus": "Exception Handling"
        },
        {
            "description": "This is the parent of Error and Exception classes.",
            "answers": {"A": "Throwable", "B": "Catchable",
                        "C": "MainError", "D": "MainException"},
            "answer": "A",
            "explaination": "Throwable is the parent of both Error and Exception class.",
            "areaOfFocus": "Exception Handling"
        }
    ]
}